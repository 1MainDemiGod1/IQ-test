const express = require('express');
const bodyParser = require('body-parser');
const sqlite3 = require('sqlite3').verbose();
const path = require('path');
const nodemailer = require('nodemailer');
const bcrypt = require('bcrypt');
const jwt = require('jsonwebtoken');
const cookieParser = require('cookie-parser');

const app = express();
const db = new sqlite3.Database('./iqtest.db');

// Настройка транспорта для gmail (замените на свои данные)
const transporter = nodemailer.createTransport({
  service: 'gmail',
  auth: {
    user: 'sdcvuinm006@gmail.com', // замените на свой email
    pass: 'wbso mjyl mlvk bnyt' // замените на свой пароль или пароль приложения
  }
});

app.use(bodyParser.urlencoded({ extended: true }));
app.use(express.static('docs'));
app.use(cookieParser());

// Создание таблиц, если не существуют
// Пользователи и результаты
// ... existing code ...
db.serialize(() => {
  db.run(`CREATE TABLE IF NOT EXISTS users (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    username TEXT UNIQUE,
    password TEXT,
    email TEXT,
    lastname TEXT,
    firstname TEXT,
    middlename TEXT
  )`);
  db.run(`CREATE TABLE IF NOT EXISTS results (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER,
    score INTEGER,
    date TEXT,
    FOREIGN KEY(user_id) REFERENCES users(id)
  )`);
});

// Маршруты
// Главная страница
app.get('/', (req, res) => {
  if (req.session.userId) {
    res.redirect('/test');
  } else {
    res.sendFile(path.join(__dirname, 'docs', 'index.html'));
  }
});

// Регистрация
app.post('/register', async (req, res) => {
  const { username, password, email, lastname, firstname, middlename } = req.body;
  if (!email || !/^[^@\s]+@[^@\s]+\.[^@\s]+$/.test(email)) {
    return res.redirect('/register.html?error=Некорректный+email');
  }
  db.get('SELECT id FROM users WHERE email = ?', [email], async (err, row) => {
    if (row) {
      return res.redirect('/register.html?error=Пользователь+с+таким+email+уже+существует');
    }
    try {
      const hashedPassword = await bcrypt.hash(password, 10);
      db.run('INSERT INTO users (username, password, email, lastname, firstname, middlename) VALUES (?, ?, ?, ?, ?, ?)', [username, hashedPassword, email, lastname, firstname, middlename], function(err) {
        if (err) {
          return res.redirect('/register.html?error=Пользователь+с+таким+логином+уже+существует');
        }
        res.redirect('/index.html?registered=1');
      });
    } catch (e) {
      return res.redirect('/register.html?error=Ошибка+регистрации');
    }
  });
});

// Вход
app.post('/login', (req, res) => {
  const { username, password } = req.body;
  db.get('SELECT id, password FROM users WHERE username = ?', [username], async (err, row) => {
    if (row && await bcrypt.compare(password, row.password)) {
      // Генерируем JWT
      const token = jwt.sign({ userId: row.id }, 'your_jwt_secret_key', { expiresIn: '2h' });
      // Отправляем токен в cookie
      res.cookie('token', token, { httpOnly: true, path: '/', sameSite: 'lax' });
      res.redirect('/tests.html');
    } else {
      res.redirect('/index.html?error=Неверный+логин+или+пароль');
    }
  });
});

// Вопросы для IQ-теста (оставить как есть)
const questions = [
  {
    q: 'Какое число должно стоять вместо знака вопроса? 2, 6, 12, 20, 30, ?',
    a: ['38', '40', '42', '44'],
    correct: 2,
    iq: 8
  },
  {
    q: 'Какое слово лишнее: квадрат, треугольник, круг, ромб, куб?',
    a: ['квадрат', 'треугольник', 'круг', 'ромб', 'куб'],
    correct: 4,
    iq: 8
  },
  {
    q: 'Найдите закономерность: 3, 9, 27, 81, ?',
    a: ['162', '243', '324', '729'],
    correct: 1,
    iq: 8
  },
  {
    q: 'Какое число пропущено: 31, 29, 24, 22, 17, ?',
    a: ['15', '14', '13', '12'],
    correct: 2,
    iq: 8
  },
  {
    q: 'Какое из чисел не подходит: 121, 144, 169, 196, 225, 256, 289, 324, 361, 400, 441, 484, 529, 576, 625, 729?',
    a: ['121', '324', '441', '729'],
    correct: 3,
    iq: 8
  },
  {
    q: 'Какое слово не подходит: мысль, идея, концепция, гипотеза, теория, аксиома?',
    a: ['мысль', 'идея', 'концепция', 'гипотеза', 'теория', 'аксиома'],
    correct: 5,
    iq: 8
  },
  {
    q: 'Какое число будет следующим: 2, 12, 30, 56, 90, ?',
    a: ['110', '132', '156', '182'],
    correct: 1,
    iq: 8
  },
  {
    q: 'Найдите закономерность: 1, 4, 9, 16, 25, 36, 49, 64, 81, ?',
    a: ['90', '91', '100', '121'],
    correct: 2,
    iq: 8
  },
  {
    q: 'Какое число пропущено: 7, 10, 8, 11, 9, 12, ?',
    a: ['10', '11', '12', '13'],
    correct: 0,
    iq: 8
  },
  {
    q: 'Какое слово не подходит: атом, молекула, клетка, орган, организм?',
    a: ['атом', 'молекула', 'клетка', 'орган', 'организм'],
    correct: 0,
    iq: 8
  },
  {
    q: 'Какое число будет следующим: 1, 2, 6, 24, 120, ?',
    a: ['240', '360', '720', '840'],
    correct: 2,
    iq: 8
  },
  {
    q: 'Какое из чисел не подходит: 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 91?',
    a: ['67', '73', '79', '91'],
    correct: 3,
    iq: 8
  },
  {
    q: 'Какое слово не подходит: красный, синий, зелёный, жёлтый, белый, чёрный?',
    a: ['красный', 'синий', 'зелёный', 'жёлтый', 'белый', 'чёрный'],
    correct: 4,
    iq: 8
  },
  {
    q: 'Какое число пропущено: 2, 5, 10, 17, 26, ?',
    a: ['33', '34', '35', '36'],
    correct: 1,
    iq: 8
  },
  {
    q: 'Какое из чисел не подходит: 8, 27, 64, 125, 216, 343, 512, 729, 1000?',
    a: ['343', '512', '729', '1000'],
    correct: 3,
    iq: 8
  },
  {
    q: 'Какое слово не подходит: лев, тигр, леопард, гепард, ягуар, пантера, пума, рысь?',
    a: ['лев', 'тигр', 'леопард', 'гепард', 'ягуар', 'пантера', 'пума', 'рысь'],
    correct: 7,
    iq: 8
  },
  {
    q: 'Какое число будет следующим: 3, 6, 18, 72, ?',
    a: ['144', '216', '288', '360'],
    correct: 1,
    iq: 8
  },
  {
    q: 'Какое слово не подходит: весна, лето, осень, зима, месяц?',
    a: ['весна', 'лето', 'осень', 'зима', 'месяц'],
    correct: 4,
    iq: 8
  },
  {
    q: 'Какое число пропущено: 4, 9, 20, 43, ?',
    a: ['86', '90', '94', '98'],
    correct: 0,
    iq: 8
  },
  {
    q: 'Какое из чисел не подходит: 6, 28, 496, 8128, 33550336, 8589869056?',
    a: ['496', '8128', '33550336', '8589869056'],
    correct: 3,
    iq: 8
  }
];

// Вопросы для Практикума по решению математических задач
const questionsMath = [
  {
    q: 'Вычислите предел: lim_{x→0} (sin(3x)/x)',
    a: ['3', '0', '1', '∞'],
    correct: 0
  },
  {
    q: 'Вычислите интеграл: ∫₀¹ x^2 dx',
    a: ['1/3', '1/2', '1', '2/3'],
    correct: 0
  },
  {
    q: 'Решите уравнение: e^{2x} = 7',
    a: ['x = ln(7)/2', 'x = 2ln(7)', 'x = ln(14)', 'x = ln(7)'],
    correct: 0
  },
  {
    q: 'Найдите частную производную функции f(x, y) = x^2y + y^3 по y',
    a: ['x^2 + 3y^2', '2xy + 3y^2', '2x + 3y^2', 'x^2y + 3y^2'],
    correct: 0
  },
  {
    q: 'Определите сходимость ряда: ∑_{n=1}^∞ 1/n^2',
    a: ['Сходится', 'Не сходится', 'Равен 0', 'Равен ∞'],
    correct: 0
  },
  {
    q: 'Решите систему: x + y = 3, x - y = 1',
    a: ['x=2, y=1', 'x=1, y=2', 'x=3, y=0', 'x=0, y=3'],
    correct: 0
  },
  {
    q: 'Вычислите определитель | 2 1 |\\n| 3 4 |',
    a: ['5', '8', '1', '7'],
    correct: 0
  },
  {
    q: 'Решите дифференциальное уравнение: y\' = 2y, y(0)=1',
    a: ['y = e^{2x}', 'y = 2e^x', 'y = e^x', 'y = 2e^{2x}'],
    correct: 0
  },
  {
    q: 'Вычислите интеграл: ∫ cos(x) dx',
    a: ['sin(x) + C', '-sin(x) + C', 'cos(x) + C', '-cos(x) + C'],
    correct: 0
  },
  {
    q: 'Найдите ранг матрицы: [[1,2,3],[2,4,6],[3,6,9]]',
    a: ['1', '2', '3', '0'],
    correct: 0
  },
  {
    q: 'Вычислите производную: d/dx (ln(x^2+1))',
    a: ['2x/(x^2+1)', '1/(x^2+1)', '2/(x^2+1)', 'x/(x^2+1)'],
    correct: 0
  },
  {
    q: 'Решите уравнение: |x-2| = 5',
    a: ['x=7 или x=-3', 'x=3 или x=-7', 'x=5 или x=-2', 'x=2 или x=-5'],
    correct: 0
  },
  {
    q: 'Вычислите сумму: ∑_{k=1}^{10} k',
    a: ['55', '45', '50', '60'],
    correct: 0
  },
  {
    q: 'Решите: lim_{x→∞} (1 + 1/x)^x',
    a: ['e', '1', '0', '∞'],
    correct: 0
  },
  {
    q: 'Вычислите интеграл: ∫₀^π sin(x) dx',
    a: ['2', '0', '1', 'π'],
    correct: 0
  },
  {
    q: 'Найдите собственные значения матрицы [[2,0],[0,3]]',
    a: ['2 и 3', '0 и 5', '1 и 2', '3 и 4'],
    correct: 0
  },
  {
    q: 'Вычислите вероятность выпадения орла при одном броске монеты',
    a: ['1/2', '1/3', '1/4', '1'],
    correct: 0
  },
  {
    q: 'Решите уравнение: x^3 - 8 = 0',
    a: ['2', '-2', '4', '-4'],
    correct: 0
  },
  {
    q: 'Вычислите: ∫ e^x dx',
    a: ['e^x + C', 'e^x', 'x e^x + C', 'ln(x) + C'],
    correct: 0
  },
  {
    q: 'Вычислите: lim_{x→0} (1-cos(x))/x^2',
    a: ['1/2', '0', '1', '∞'],
    correct: 0
  }
];

// Вопросы для теста по комплексному анализу
const questionsAnalysis = [
  {
    q: 'Вычислите интеграл по контуру |z|=1: ∫_C z^2 dz',
    a: ['0', '2πi', '2', 'i'],
    correct: 0
  },
  {
    q: 'Найдите выResidue функции f(z) = 1/(z^2+1) в точке z=i',
    a: ['1/(2i)', '-1/(2i)', 'i', '-i'],
    correct: 0
  },
  {
    q: 'Какое условие Коши-Римана для функции f(z) = u(x, y) + iv(x, y)?',
    a: ['u_x = v_y, u_y = -v_x', 'u_x = u_y, v_x = v_y', 'u_x = v_x, u_y = v_y', 'u_x = -v_y, u_y = v_x'],
    correct: 0
  },
  {
    q: 'Чему равен интеграл ∫₀^{2π} e^{inθ} dθ при n ≠ 0?',
    a: ['0', '2π', '1', '2πi'],
    correct: 0
  },
  {
    q: 'Какой ряд называется разложением Лорана?',
    a: ['Ряд с положительными и отрицательными степенями', 'Только положительные степени', 'Только отрицательные степени', 'Ряд по синусам и косинусам'],
    correct: 0
  },
  {
    q: 'Где функция f(z) = 1/z аналитична?',
    a: ['Везде, кроме z=0', 'Везде', 'Только при z=0', 'Нигде'],
    correct: 0
  },
  {
    q: 'Чему равна производная f(z) = z^n?',
    a: ['n z^{n-1}', 'z^n', 'n z^n', 'z^{n-1}'],
    correct: 0
  },
  {
    q: 'Что такое полюс функции?',
    a: ['Особая точка, где функция стремится к бесконечности', 'Точка максимума', 'Точка минимума', 'Точка разрыва первого рода'],
    correct: 0
  },
  {
    q: 'В каком случае интеграл по замкнутому контуру аналитической функции равен нулю?',
    a: ['Если функция аналитична внутри и на контуре', 'Если функция неаналитична', 'Если контур не замкнут', 'Всегда'],
    correct: 0
  },
  {
    q: 'Чему равен модуль числа z = 3 - 4i?',
    a: ['5', '7', '1', '4'],
    correct: 0
  },
  {
    q: 'Что такое гармоническая функция?',
    a: ['Решение уравнения Лапласа', 'Решение уравнения Пуассона', 'Решение уравнения теплопроводности', 'Решение волнового уравнения'],
    correct: 0
  },
  {
    q: 'Чему равен аргумент числа z = -1 + i√3?',
    a: ['2π/3', 'π/3', 'π/2', 'π'],
    correct: 0
  },
  {
    q: 'Какой интеграл вычисляется с помощью формулы Коши?',
    a: ['Интеграл аналитической функции по замкнутому контуру', 'Интеграл по вещественной оси', 'Интеграл по открытому контуру', 'Интеграл по отрезку'],
    correct: 0
  },
  {
    q: 'Что такое выResidue?',
    a: ['Коэффициент при 1/(z-z0) в ряде Лорана', 'Произведение всех корней', 'Сумма всех корней', 'Произвольная константа'],
    correct: 0
  },
  {
    q: 'Чему равен интеграл ∫_{|z|=2} dz/z?',
    a: ['2πi', '0', '1', '2'],
    correct: 0
  },
  {
    q: 'Что такое аналитическая функция?',
    a: ['Комплексная функция, дифференцируемая в каждой точке области', 'Любая функция', 'Только вещественная функция', 'Функция, имеющая разрыв'],
    correct: 0
  },
  {
    q: 'Чему равен радиус сходимости степенного ряда ∑ z^n?',
    a: ['1', '0', '∞', '2'],
    correct: 0
  },
  {
    q: 'Что такое конформное отображение?',
    a: ['Отображение, сохраняющее углы', 'Отображение, сохраняющее длины', 'Любое отображение', 'Отображение, сохраняющее площади'],
    correct: 0
  },
  {
    q: 'Чему равен интеграл ∫₀^{2π} cos^2θ dθ?',
    a: ['π', '2π', '0', '1'],
    correct: 0
  },
  {
    q: 'Чему равен аргумент числа z = 1 + i?',
    a: ['π/4', 'π/2', 'π/3', 'π/6'],
    correct: 0
  }
];

// Вопросы для теста по основам проектирования ИС и БД
const questionsDB = [
  {
    q: 'Что такое нормализация базы данных?',
    a: ['Процесс устранения избыточности и аномалий', 'Создание резервных копий', 'Оптимизация запросов', 'Процесс шифрования данных'],
    correct: 0
  },
  {
    q: 'Какой ключ однозначно идентифицирует запись в таблице?',
    a: ['Первичный ключ', 'Внешний ключ', 'Альтернативный ключ', 'Составной ключ'],
    correct: 0
  },
  {
    q: 'Что такое внешняя связь (foreign key)?',
    a: ['Связь между таблицами', 'Ключ для поиска', 'Ключ для сортировки', 'Ключ для индексации'],
    correct: 0
  },
  {
    q: 'Какой язык используется для создания и управления БД?',
    a: ['SQL', 'HTML', 'Python', 'C++'],
    correct: 0
  },
  {
    q: 'Что такое транзакция?',
    a: ['Группа операций, выполняемых как единое целое', 'Одиночная операция', 'Процесс резервного копирования', 'Процесс восстановления'],
    correct: 0
  },
  {
    q: 'Что означает аббревиатура ACID?',
    a: ['Atomicity, Consistency, Isolation, Durability', 'Access, Control, Integrity, Data', 'Active, Consistent, Independent, Durable', 'None of the above'],
    correct: 0
  },
  {
    q: 'Что такое ER-диаграмма?',
    a: ['Диаграмма "сущность-связь"', 'Диаграмма потоков данных', 'Диаграмма классов', 'Диаграмма последовательности'],
    correct: 0
  },
  {
    q: 'Какой оператор используется для выборки данных в SQL?',
    a: ['SELECT', 'INSERT', 'UPDATE', 'DELETE'],
    correct: 0
  },
  {
    q: 'Что такое индекс в базе данных?',
    a: ['Структура для ускорения поиска', 'Тип данных', 'Ограничение', 'Формат хранения'],
    correct: 0
  },
  {
    q: 'Что такое денормализация?',
    a: ['Умышленное внесение избыточности', 'Удаление таблиц', 'Шифрование данных', 'Создание индексов'],
    correct: 0
  },
  {
    q: 'Какой тип связи означает "один ко многим"?',
    a: ['Один объект связан с несколькими', 'Каждый с каждым', 'Один с одним', 'Многие с одним'],
    correct: 0
  },
  {
    q: 'Что такое триггер в СУБД?',
    a: ['Автоматическая процедура при событии', 'Тип индекса', 'Тип ключа', 'Тип транзакции'],
    correct: 0
  },
  {
    q: 'Что такое представление (view) в SQL?',
    a: ['Виртуальная таблица', 'Физическая таблица', 'Тип индекса', 'Тип ключа'],
    correct: 0
  },
  {
    q: 'Что такое уникальный ключ?',
    a: ['Ключ, значения которого уникальны', 'Ключ для поиска', 'Ключ для сортировки', 'Ключ для индексации'],
    correct: 0
  },
  {
    q: 'Что такое схема базы данных?',
    a: ['Структура, описывающая таблицы и связи', 'Резервная копия', 'Набор индексов', 'Тип транзакции'],
    correct: 0
  },
  {
    q: 'Что такое DDL?',
    a: ['Data Definition Language', 'Data Description Language', 'Data Deletion Language', 'Data Distribution Language'],
    correct: 0
  },
  {
    q: 'Что такое DML?',
    a: ['Data Manipulation Language', 'Data Modeling Language', 'Data Management Language', 'Data Migration Language'],
    correct: 0
  },
  {
    q: 'Что такое изоляция транзакций?',
    a: ['Способность транзакций не влиять друг на друга', 'Выполнение только одной транзакции', 'Резервное копирование', 'Удаление данных'],
    correct: 0
  },
  {
    q: 'Что такое каскадное удаление?',
    a: ['Автоматическое удаление связанных записей', 'Удаление индексов', 'Удаление ключей', 'Удаление схемы'],
    correct: 0
  },
  {
    q: 'Что такое нормальная форма?',
    a: ['Степень структурированности таблицы', 'Тип индекса', 'Тип ключа', 'Тип транзакции'],
    correct: 0
  }
];

// Вопросы для теста по методам вычислений
const questionsNumerical = [
  {
    q: 'Какой метод используется для численного решения нелинейных уравнений?',
    a: ['Метод Ньютона', 'Метод Гаусса', 'Метод Эйлера', 'Метод трапеций'],
    correct: 0
  },
  {
    q: 'Что такое интерполяция?',
    a: ['Построение функции по известным точкам', 'Вычисление производной', 'Вычисление интеграла', 'Решение дифференциальных уравнений'],
    correct: 0
  },
  {
    q: 'Какой метод используется для численного интегрирования?',
    a: ['Метод трапеций', 'Метод Ньютона', 'Метод Гаусса', 'Метод бисекции'],
    correct: 0
  },
  {
    q: 'Что такое устойчивость численного метода?',
    a: ['Способность метода не накапливать ошибки', 'Быстрота вычислений', 'Точность результата', 'Простота реализации'],
    correct: 0
  },
  {
    q: 'Какой метод используется для решения СЛАУ?',
    a: ['Метод Гаусса', 'Метод Ньютона', 'Метод трапеций', 'Метод Эйлера'],
    correct: 0
  },
  {
    q: 'Что такое аппроксимация?',
    a: ['Приближённое представление функции', 'Точное вычисление', 'Интерполяция', 'Экстраполяция'],
    correct: 0
  },
  {
    q: 'Какой метод используется для численного решения ОДУ?',
    a: ['Метод Эйлера', 'Метод Гаусса', 'Метод Ньютона', 'Метод трапеций'],
    correct: 0
  },
  {
    q: 'Что такое шаг интегрирования?',
    a: ['Интервал между узлами', 'Точность метода', 'Число итераций', 'Погрешность'],
    correct: 0
  },
  {
    q: 'Что такое погрешность численного метода?',
    a: ['Разность между точным и приближённым значением', 'Число итераций', 'Время вычислений', 'Размер шага'],
    correct: 0
  },
  {
    q: 'Какой метод используется для поиска корня уравнения?',
    a: ['Метод бисекции', 'Метод трапеций', 'Метод Эйлера', 'Метод Гаусса'],
    correct: 0
  },
  {
    q: 'Что такое итерационный процесс?',
    a: ['Последовательное приближение к решению', 'Однократное вычисление', 'Параллельные вычисления', 'Графический метод'],
    correct: 0
  },
  {
    q: 'Что такое система линейных алгебраических уравнений (СЛАУ)?',
    a: ['Совокупность линейных уравнений', 'Одна функция', 'Нелинейное уравнение', 'Интегральное уравнение'],
    correct: 0
  },
  {
    q: 'Какой метод позволяет минимизировать сумму квадратов отклонений?',
    a: ['Метод наименьших квадратов', 'Метод Эйлера', 'Метод трапеций', 'Метод Ньютона'],
    correct: 0
  },
  {
    q: 'Что такое экстраполяция?',
    a: ['Оценка значений вне интервала', 'Оценка внутри интервала', 'Аппроксимация', 'Интерполяция'],
    correct: 0
  },
  {
    q: 'Что такое явная схема?',
    a: ['Схема, где новое значение выражается через известные', 'Схема с обратной связью', 'Схема с итерациями', 'Схема с аппроксимацией'],
    correct: 0
  },
  {
    q: 'Что такое неявная схема?',
    a: ['Схема, где новое значение выражается через неизвестные', 'Схема с аппроксимацией', 'Схема с итерациями', 'Схема с обратной связью'],
    correct: 0
  },
  {
    q: 'Что такое метод Рунге-Кутты?',
    a: ['Метод решения ОДУ', 'Метод интегрирования', 'Метод аппроксимации', 'Метод поиска корней'],
    correct: 0
  },
  {
    q: 'Что такое система нелинейных уравнений?',
    a: ['Система, содержащая хотя бы одно нелинейное уравнение', 'Только линейные уравнения', 'Только интегральные уравнения', 'Только дифференциальные уравнения'],
    correct: 0
  },
  {
    q: 'Что такое метод простых итераций?',
    a: ['Метод последовательных приближений', 'Метод интегрирования', 'Метод аппроксимации', 'Метод трапеций'],
    correct: 0
  },
  {
    q: 'Что такое устойчивость разностной схемы?',
    a: ['Свойство схемы не накапливать ошибки при уменьшении шага', 'Быстрота вычислений', 'Точность результата', 'Простота реализации'],
    correct: 0
  }
];

// Вопросы для теста по уравнениям математической физики
const questionsPhysMath = [
  {
    q: 'Какое уравнение называется уравнением Лапласа?',
    a: ['Δu = 0', 'u_t = a^2 u_xx', 'u_xx + u_yy = f(x, y)', 'u_t + u_x = 0'],
    correct: 0
  },
  {
    q: 'Что такое граничные условия Дирихле?',
    a: ['Задание значения функции на границе', 'Задание производной на границе', 'Задание значения внутри области', 'Задание значения на бесконечности'],
    correct: 0
  },
  {
    q: 'Какое уравнение описывает процесс теплопроводности?',
    a: ['u_t = a^2 u_xx', 'Δu = 0', 'u_tt = c^2 u_xx', 'u_xx + u_yy = 0'],
    correct: 0
  },
  {
    q: 'Что такое начальные условия?',
    a: ['Задание значения функции в начальный момент времени', 'Задание значения на границе', 'Задание производной на границе', 'Задание значения на бесконечности'],
    correct: 0
  },
  {
    q: 'Какое уравнение называется уравнением Пуассона?',
    a: ['Δu = f', 'u_t = a^2 u_xx', 'u_tt = c^2 u_xx', 'u_xx + u_yy = 0'],
    correct: 0
  },
  {
    q: 'Что такое гармоническая функция?',
    a: ['Решение уравнения Лапласа', 'Решение уравнения Пуассона', 'Решение уравнения теплопроводности', 'Решение волнового уравнения'],
    correct: 0
  },
  {
    q: 'Что такое волновое уравнение?',
    a: ['u_tt = c^2 u_xx', 'u_t = a^2 u_xx', 'Δu = 0', 'Δu = f'],
    correct: 0
  },
  {
    q: 'Что такое собственные значения задачи Штурма-Лиувилля?',
    a: ['Значения параметра, при которых есть нетривиальное решение', 'Значения функции на границе', 'Производные на границе', 'Параметры уравнения'],
    correct: 0
  },
  {
    q: 'Что такое метод разделения переменных?',
    a: ['Метод представления решения в виде произведения функций', 'Метод аппроксимации', 'Метод интегрирования', 'Метод конечных разностей'],
    correct: 0
  },
  {
    q: 'Что такое краевая задача?',
    a: ['Задача с условиями на границе области', 'Задача с начальными условиями', 'Задача с условиями на бесконечности', 'Задача с условиями внутри области'],
    correct: 0
  },
  {
    q: 'Что такое принцип суперпозиции?',
    a: ['Сумма решений — тоже решение', 'Произведение решений — решение', 'Разность решений — не решение', 'Сумма решений — не решение'],
    correct: 0
  },
  {
    q: 'Что такое функция Грина?',
    a: ['Функция, используемая для построения решения уравнения', 'Гармоническая функция', 'Собственное решение', 'Производная функции'],
    correct: 0
  },
  {
    q: 'Что такое неоднородное уравнение?',
    a: ['Уравнение с правой частью, отличной от нуля', 'Уравнение без производных', 'Уравнение с постоянными коэффициентами', 'Уравнение с переменными коэффициентами'],
    correct: 0
  },
  {
    q: 'Что такое однородное уравнение?',
    a: ['Уравнение с правой частью, равной нулю', 'Уравнение с переменными коэффициентами', 'Уравнение с постоянными коэффициентами', 'Уравнение без производных'],
    correct: 0
  },
  {
    q: 'Что такое спектр задачи Штурма-Лиувилля?',
    a: ['Множество собственных значений', 'Множество решений', 'Множество граничных условий', 'Множество коэффициентов'],
    correct: 0
  },
  {
    q: 'Что такое разностная схема?',
    a: ['Численный метод для приближённого решения уравнения', 'Метод интегрирования', 'Метод аппроксимации', 'Метод разделения переменных'],
    correct: 0
  },
  {
    q: 'Что такое устойчивость разностной схемы?',
    a: ['Свойство схемы не накапливать ошибки', 'Быстрота вычислений', 'Точность результата', 'Простота реализации'],
    correct: 0
  },
  {
    q: 'Что такое волновой процесс?',
    a: ['Процесс распространения возмущения', 'Процесс теплопередачи', 'Процесс диффузии', 'Процесс аппроксимации'],
    correct: 0
  },
  {
    q: 'Что такое начально-краевая задача?',
    a: ['Задача с начальными и граничными условиями', 'Задача только с начальными условиями', 'Задача только с граничными условиями', 'Задача без условий'],
    correct: 0
  },
  {
    q: 'Что такое спектральный параметр?',
    a: ['Параметр, при котором существует нетривиальное решение', 'Параметр уравнения', 'Граничное значение', 'Производная функции'],
    correct: 0
  }
];

// Вопросы для теста по технологии разработки ПО
const questionsSoftDev = [
  {
    q: 'Что такое жизненный цикл программного обеспечения?',
    a: ['Совокупность этапов создания и сопровождения ПО', 'Только этап тестирования', 'Только этап проектирования', 'Только этап внедрения'],
    correct: 0
  },
  {
    q: 'Что такое инкапсуляция в ООП?',
    a: ['Сокрытие внутренней реализации объекта', 'Наследование свойств', 'Полиморфизм', 'Абстракция'],
    correct: 0
  },
  {
    q: 'Что такое UML?',
    a: ['Язык моделирования программных систем', 'Язык программирования', 'СУБД', 'Операционная система'],
    correct: 0
  },
  {
    q: 'Что такое agile-методология?',
    a: ['Гибкий подход к разработке ПО', 'Жёсткая последовательность этапов', 'Методология водопада', 'Методология прототипирования'],
    correct: 0
  },
  {
    q: 'Что такое тестирование ПО?',
    a: ['Процесс проверки соответствия ПО требованиям', 'Процесс написания кода', 'Процесс проектирования', 'Процесс внедрения'],
    correct: 0
  },
  {
    q: 'Что такое рефакторинг?',
    a: ['Изменение внутренней структуры кода без изменения внешнего поведения', 'Добавление новых функций', 'Удаление кода', 'Тестирование кода'],
    correct: 0
  },
  {
    q: 'Что такое паттерн проектирования?',
    a: ['Типовое решение часто встречающейся задачи', 'Язык программирования', 'Тестовый сценарий', 'Модель данных'],
    correct: 0
  },
  {
    q: 'Что такое контроль версий?',
    a: ['Система отслеживания изменений в коде', 'Система тестирования', 'Система проектирования', 'Система внедрения'],
    correct: 0
  },
  {
    q: 'Что такое интеграционное тестирование?',
    a: ['Тестирование взаимодействия модулей', 'Тестирование отдельных функций', 'Тестирование интерфейса', 'Тестирование производительности'],
    correct: 0
  },
  {
    q: 'Что такое CI/CD?',
    a: ['Непрерывная интеграция и доставка', 'Контроль версий', 'Тестирование', 'Проектирование'],
    correct: 0
  },
  {
    q: 'Что такое SOLID?',
    a: ['Принципы объектно-ориентированного проектирования', 'Язык программирования', 'Модель данных', 'Методология тестирования'],
    correct: 0
  },
  {
    q: 'Что такое Scrum?',
    a: ['Гибкая методология управления проектами', 'Язык программирования', 'Система контроля версий', 'Модель данных'],
    correct: 0
  },
  {
    q: 'Что такое инкрементальная разработка?',
    a: ['Пошаговое наращивание функциональности', 'Разработка без тестирования', 'Разработка без проектирования', 'Разработка без внедрения'],
    correct: 0
  },
  {
    q: 'Что такое модульное тестирование?',
    a: ['Тестирование отдельных модулей', 'Тестирование всей системы', 'Тестирование интерфейса', 'Тестирование производительности'],
    correct: 0
  },
  {
    q: 'Что такое DevOps?',
    a: ['Культура совместной работы разработчиков и эксплуатации', 'Только разработка', 'Только тестирование', 'Только эксплуатация'],
    correct: 0
  },
  {
    q: 'Что такое абстракция в ООП?',
    a: ['Выделение существенных характеристик объекта', 'Сокрытие реализации', 'Наследование', 'Полиморфизм'],
    correct: 0
  },
  {
    q: 'Что такое полиморфизм?',
    a: ['Способность объектов принимать разные формы', 'Сокрытие реализации', 'Наследование', 'Абстракция'],
    correct: 0
  },
  {
    q: 'Что такое MVP?',
    a: ['Минимально жизнеспособный продукт', 'Модель представления', 'Методология тестирования', 'Модель данных'],
    correct: 0
  },
  {
    q: 'Что такое code review?',
    a: ['Проверка кода другими разработчиками', 'Тестирование кода', 'Проектирование кода', 'Внедрение кода'],
    correct: 0
  },
  {
    q: 'Что такое Kanban?',
    a: ['Метод визуализации рабочего процесса', 'Язык программирования', 'Система контроля версий', 'Модель данных'],
    correct: 0
  }
];

// Вопросы для теста по математическому моделированию и анализу данных
const questionsModeling = [
  {
    q: 'Что такое математическая модель?',
    a: ['Формализованное описание объекта или процесса', 'Графическое изображение', 'Компьютерная программа', 'Экспериментальная установка'],
    correct: 0
  },
  {
    q: 'Что такое параметр модели?',
    a: ['Величина, определяющая поведение модели', 'Любая переменная', 'Константа', 'Функция'],
    correct: 0
  },
  {
    q: 'Что такое калибровка модели?',
    a: ['Настройка параметров по экспериментальным данным', 'Построение графика', 'Решение уравнения', 'Сбор данных'],
    correct: 0
  },
  {
    q: 'Что такое регрессионный анализ?',
    a: ['Метод выявления зависимости между переменными', 'Метод кластеризации', 'Метод оптимизации', 'Метод визуализации'],
    correct: 0
  },
  {
    q: 'Что такое метод наименьших квадратов?',
    a: ['Метод подбора параметров для минимизации суммы квадратов отклонений', 'Метод интегрирования', 'Метод дифференцирования', 'Метод аппроксимации'],
    correct: 0
  },
  {
    q: 'Что такое дисперсия?',
    a: ['Мера разброса данных', 'Среднее значение', 'Максимальное значение', 'Минимальное значение'],
    correct: 0
  },
  {
    q: 'Что такое корреляция?',
    a: ['Мера взаимосвязи между переменными', 'Мера разброса', 'Среднее значение', 'Мера асимметрии'],
    correct: 0
  },
  {
    q: 'Что такое кластеризация?',
    a: ['Группировка объектов по сходству', 'Построение регрессии', 'Оптимизация', 'Визуализация'],
    correct: 0
  },
  {
    q: 'Что такое факторный анализ?',
    a: ['Метод выявления скрытых факторов', 'Метод регрессии', 'Метод кластеризации', 'Метод визуализации'],
    correct: 0
  },
  {
    q: 'Что такое временной ряд?',
    a: ['Последовательность значений во времени', 'Группа объектов', 'Множество параметров', 'График функции'],
    correct: 0
  },
  {
    q: 'Что такое симуляция?',
    a: ['Имитация поведения системы', 'Построение графика', 'Решение уравнения', 'Сбор данных'],
    correct: 0
  },
  {
    q: 'Что такое оптимизация?',
    a: ['Поиск наилучшего решения задачи', 'Построение модели', 'Сбор данных', 'Визуализация'],
    correct: 0
  },
  {
    q: 'Что такое гипотеза?',
    a: ['Предположение, подлежащее проверке', 'Результат эксперимента', 'Параметр модели', 'Метод анализа'],
    correct: 0
  },
  {
    q: 'Что такое p-value?',
    a: ['Вероятность получить результат не менее экстремальный при верной нулевой гипотезе', 'Среднее значение', 'Дисперсия', 'Корреляция'],
    correct: 0
  },
  {
    q: 'Что такое доверительный интервал?',
    a: ['Интервал, в котором с заданной вероятностью находится истинное значение параметра', 'Среднее значение', 'Дисперсия', 'Корреляция'],
    correct: 0
  },
  {
    q: 'Что такое outlier (выброс)?',
    a: ['Наблюдение, резко отличающееся от остальных', 'Среднее значение', 'Дисперсия', 'Корреляция'],
    correct: 0
  },
  {
    q: 'Что такое метод Монте-Карло?',
    a: ['Метод статистического моделирования с использованием случайных чисел', 'Метод оптимизации', 'Метод кластеризации', 'Метод визуализации'],
    correct: 0
  },
  {
    q: 'Что такое линейная регрессия?',
    a: ['Модель зависимости между переменными в виде прямой', 'Модель кластеризации', 'Модель оптимизации', 'Модель визуализации'],
    correct: 0
  },
  {
    q: 'Что такое матрица корреляций?',
    a: ['Таблица взаимных корреляций между переменными', 'Таблица средних значений', 'Таблица дисперсий', 'Таблица параметров'],
    correct: 0
  },
  {
    q: 'Что такое кросс-валидация?',
    a: ['Метод оценки качества модели на разных подвыборках', 'Метод оптимизации', 'Метод кластеризации', 'Метод визуализации'],
    correct: 0
  }
];

// Вопросы для теста по информационному менеджменту
const questionsInfoMan = [
  {
    q: 'Что такое информационный менеджмент?',
    a: ['Управление информационными ресурсами организации', 'Управление персоналом', 'Управление финансами', 'Управление проектами'],
    correct: 0
  },
  {
    q: 'Что такое информационный ресурс?',
    a: ['Совокупность данных, знаний и информации', 'Только база данных', 'Только документы', 'Только программное обеспечение'],
    correct: 0
  },
  {
    q: 'Что такое жизненный цикл информации?',
    a: ['Процесс создания, хранения, использования и уничтожения информации', 'Процесс передачи информации', 'Процесс обработки информации', 'Процесс защиты информации'],
    correct: 0
  },
  {
    q: 'Что такое корпоративная информационная система?',
    a: ['Система для поддержки деятельности организации', 'Система для личного пользования', 'Система для хранения данных', 'Система для управления проектами'],
    correct: 0
  },
  {
    q: 'Что такое информационная безопасность?',
    a: ['Защита информации от несанкционированного доступа', 'Оптимизация бизнес-процессов', 'Управление проектами', 'Управление финансами'],
    correct: 0
  },
  {
    q: 'Что такое документооборот?',
    a: ['Процесс создания, обработки и хранения документов', 'Процесс передачи информации', 'Процесс защиты информации', 'Процесс уничтожения информации'],
    correct: 0
  },
  {
    q: 'Что такое электронный архив?',
    a: ['Система хранения электронных документов', 'Система управления проектами', 'Система защиты информации', 'Система передачи данных'],
    correct: 0
  },
  {
    q: 'Что такое бизнес-процесс?',
    a: ['Совокупность взаимосвязанных действий для достижения цели', 'Только производственный процесс', 'Только управленческий процесс', 'Только финансовый процесс'],
    correct: 0
  },
  {
    q: 'Что такое CRM-система?',
    a: ['Система управления взаимоотношениями с клиентами', 'Система управления проектами', 'Система управления финансами', 'Система управления персоналом'],
    correct: 0
  },
  {
    q: 'Что такое ERP-система?',
    a: ['Система управления ресурсами предприятия', 'Система управления проектами', 'Система управления финансами', 'Система управления персоналом'],
    correct: 0
  },
  {
    q: 'Что такое Big Data?',
    a: ['Большие объёмы разнородных данных', 'Малые объёмы данных', 'Только структурированные данные', 'Только текстовые данные'],
    correct: 0
  },
  {
    q: 'Что такое Data Mining?',
    a: ['Процесс извлечения знаний из данных', 'Процесс хранения данных', 'Процесс передачи данных', 'Процесс защиты данных'],
    correct: 0
  },
  {
    q: 'Что такое информационная политика?',
    a: ['Совокупность правил управления информацией', 'Совокупность финансовых правил', 'Совокупность кадровых правил', 'Совокупность производственных правил'],
    correct: 0
  },
  {
    q: 'Что такое электронный документооборот?',
    a: ['Автоматизация процессов работы с документами', 'Только хранение документов', 'Только передача документов', 'Только уничтожение документов'],
    correct: 0
  },
  {
    q: 'Что такое информационная система?',
    a: ['Совокупность людей, технологий и процессов для обработки информации', 'Только программное обеспечение', 'Только база данных', 'Только документы'],
    correct: 0
  },
  {
    q: 'Что такое облачные технологии?',
    a: ['Использование удалённых серверов для хранения и обработки данных', 'Использование локальных серверов', 'Использование бумажных архивов', 'Использование флеш-накопителей'],
    correct: 0
  },
  {
    q: 'Что такое цифровая трансформация?',
    a: ['Внедрение цифровых технологий в бизнес-процессы', 'Внедрение новых сотрудников', 'Внедрение новых офисов', 'Внедрение новых финансовых инструментов'],
    correct: 0
  },
  {
    q: 'Что такое KPI?',
    a: ['Ключевой показатель эффективности', 'Ключевой показатель прибыли', 'Ключевой показатель затрат', 'Ключевой показатель персонала'],
    correct: 0
  },
  {
    q: 'Что такое информационный поток?',
    a: ['Движение информации между участниками процесса', 'Движение финансов', 'Движение товаров', 'Движение персонала'],
    correct: 0
  },
  {
    q: 'Что такое электронная подпись?',
    a: ['Средство подтверждения подлинности электронного документа', 'Средство защиты информации', 'Средство передачи данных', 'Средство хранения данных'],
    correct: 0
  }
];

// Вопросы для теста по мировым информационным ресурсам
const questionsWorldInfo = [
  {
    q: 'Что такое мировой информационный ресурс?',
    a: ['Совокупность данных, доступных в глобальном масштабе', 'Только интернет', 'Только библиотеки', 'Только архивы'],
    correct: 0
  },
  {
    q: 'Что такое открытые данные (open data)?',
    a: ['Данные, свободно доступные для использования', 'Данные только для внутреннего пользования', 'Данные только для продажи', 'Данные только для научных исследований'],
    correct: 0
  },
  {
    q: 'Что такое цифровая библиотека?',
    a: ['Электронная коллекция документов', 'Только бумажные книги', 'Только архивы', 'Только интернет-ресурсы'],
    correct: 0
  },
  {
    q: 'Что такое научная база данных?',
    a: ['Система хранения и поиска научной информации', 'Только электронная библиотека', 'Только архив', 'Только интернет'],
    correct: 0
  },
  {
    q: 'Что такое репозиторий?',
    a: ['Хранилище данных или программного кода', 'Только архив', 'Только библиотека', 'Только интернет-ресурс'],
    correct: 0
  },
  {
    q: 'Что такое DOI?',
    a: ['Уникальный идентификатор цифрового объекта', 'Тип лицензии', 'Формат файла', 'Протокол передачи данных'],
    correct: 0
  },
  {
    q: 'Что такое лицензия Creative Commons?',
    a: ['Лицензия для свободного распространения контента', 'Лицензия только для коммерческого использования', 'Лицензия только для научных работ', 'Лицензия только для программного обеспечения'],
    correct: 0
  },
  {
    q: 'Что такое агрегатор научных публикаций?',
    a: ['Сервис для поиска и доступа к научным статьям', 'Только электронная библиотека', 'Только архив', 'Только интернет-ресурс'],
    correct: 0
  },
  {
    q: 'Что такое open access?',
    a: ['Свободный доступ к научным публикациям', 'Платный доступ', 'Доступ только для сотрудников вузов', 'Доступ только для студентов'],
    correct: 0
  },
  {
    q: 'Что такое big data?',
    a: ['Большие объёмы разнородных данных', 'Малые объёмы данных', 'Только структурированные данные', 'Только текстовые данные'],
    correct: 0
  },
  {
    q: 'Что такое научная цитируемость?',
    a: ['Показатель использования публикации другими учёными', 'Число публикаций', 'Число авторов', 'Число страниц'],
    correct: 0
  },
  {
    q: 'Что такое индекс Хирша (h-index)?',
    a: ['Показатель продуктивности и цитируемости учёного', 'Число публикаций', 'Число авторов', 'Число страниц'],
    correct: 0
  },
  {
    q: 'Что такое агрегатор новостей?',
    a: ['Сервис для сбора и предоставления новостной информации', 'Только газета', 'Только журнал', 'Только интернет-ресурс'],
    correct: 0
  },
  {
    q: 'Что такое архив?',
    a: ['Хранилище документов и данных', 'Только электронная библиотека', 'Только интернет-ресурс', 'Только база данных'],
    correct: 0
  },
  {
    q: 'Что такое метаданные?',
    a: ['Данные о данных', 'Только текстовые данные', 'Только числовые данные', 'Только графические данные'],
    correct: 0
  },
  {
    q: 'Что такое поисковая система?',
    a: ['Система для поиска информации в интернете', 'Только база данных', 'Только электронная библиотека', 'Только архив'],
    correct: 0
  },
  {
    q: 'Что такое API?',
    a: ['Интерфейс программирования приложений', 'Только база данных', 'Только электронная библиотека', 'Только архив'],
    correct: 0
  },
  {
    q: 'Что такое лицензия GPL?',
    a: ['Свободная лицензия для программного обеспечения', 'Лицензия только для коммерческого использования', 'Лицензия только для научных работ', 'Лицензия только для данных'],
    correct: 0
  },
  {
    q: 'Что такое цифровой архив?',
    a: ['Электронное хранилище документов и данных', 'Только бумажные документы', 'Только интернет-ресурс', 'Только база данных'],
    correct: 0
  },
  {
    q: 'Что такое mashup-сервис?',
    a: ['Сервис, объединяющий данные из разных источников', 'Только поисковая система', 'Только электронная библиотека', 'Только архив'],
    correct: 0
  }
];

// Вопросы для теста по теории управления
const questionsControl = [
  {
    q: 'Что такое система управления?',
    a: ['Совокупность элементов, обеспечивающих достижение цели', 'Только исполнительный механизм', 'Только датчики', 'Только регулятор'],
    correct: 0
  },
  {
    q: 'Что такое обратная связь?',
    a: ['Воздействие выходного сигнала на вход системы', 'Внешнее воздействие', 'Случайный шум', 'Параметр системы'],
    correct: 0
  },
  {
    q: 'Что такое устойчивость системы?',
    a: ['Способность возвращаться в исходное состояние после возмущения', 'Способность изменять параметры', 'Способность увеличивать выход', 'Способность уменьшать вход'],
    correct: 0
  },
  {
    q: 'Что такое передаточная функция?',
    a: ['Отношение выходного сигнала к входному в частотной области', 'Функция времени', 'Функция состояния', 'Функция ошибки'],
    correct: 0
  },
  {
    q: 'Что такое линейная система?',
    a: ['Система, удовлетворяющая принципу суперпозиции', 'Система с постоянными коэффициентами', 'Система с переменными коэффициентами', 'Система с обратной связью'],
    correct: 0
  },
  {
    q: 'Что такое регулятор?',
    a: ['Устройство для поддержания заданного режима', 'Датчик', 'Исполнительный механизм', 'Система управления'],
    correct: 0
  },
  {
    q: 'Что такое переходная характеристика?',
    a: ['Отклик системы на ступенчатое воздействие', 'Отклик на гармоническое воздействие', 'Отклик на случайное воздействие', 'Отклик на постоянное воздействие'],
    correct: 0
  },
  {
    q: 'Что такое устойчивость по Ляпунову?',
    a: ['Стабильность траекторий системы при малых возмущениях', 'Стабильность по времени', 'Стабильность по частоте', 'Стабильность по амплитуде'],
    correct: 0
  },
  {
    q: 'Что такое фазовая траектория?',
    a: ['График изменения состояния системы во времени', 'График входа', 'График выхода', 'График ошибки'],
    correct: 0
  },
  {
    q: 'Что такое наблюдаемость системы?',
    a: ['Возможность определить внутреннее состояние по выходу', 'Возможность управлять системой', 'Возможность изменить параметры', 'Возможность измерить вход'],
    correct: 0
  },
  {
    q: 'Что такое управляемость системы?',
    a: ['Возможность перевести систему из любого состояния в любое другое', 'Возможность наблюдать систему', 'Возможность изменить параметры', 'Возможность измерить выход'],
    correct: 0
  },
  {
    q: 'Что такое статическая ошибка?',
    a: ['Разность между установившимся выходом и заданием', 'Разность между входом и выходом', 'Разность между состояниями', 'Разность между параметрами'],
    correct: 0
  },
  {
    q: 'Что такое частотная характеристика?',
    a: ['Отклик системы на гармоническое воздействие', 'Отклик на ступенчатое воздействие', 'Отклик на случайное воздействие', 'Отклик на постоянное воздействие'],
    correct: 0
  },
  {
    q: 'Что такое PID-регулятор?',
    a: ['Регулятор с пропорциональной, интегральной и дифференциальной составляющими', 'Регулятор с обратной связью', 'Регулятор с постоянным коэффициентом', 'Регулятор с переменным коэффициентом'],
    correct: 0
  },
  {
    q: 'Что такое астатизм системы?',
    a: ['Способность системы устранять статическую ошибку', 'Способность изменять параметры', 'Способность увеличивать выход', 'Способность уменьшать вход'],
    correct: 0
  },
  {
    q: 'Что такое характеристическое уравнение системы?',
    a: ['Уравнение, определяющее устойчивость системы', 'Уравнение состояния', 'Уравнение ошибки', 'Уравнение выхода'],
    correct: 0
  },
  {
    q: 'Что такое дискретная система управления?',
    a: ['Система с дискретным временем', 'Система с непрерывным временем', 'Система с постоянными коэффициентами', 'Система с переменными коэффициентами'],
    correct: 0
  },
  {
    q: 'Что такое аналоговая система управления?',
    a: ['Система с непрерывным временем', 'Система с дискретным временем', 'Система с постоянными коэффициентами', 'Система с переменными коэффициентами'],
    correct: 0
  },
  {
    q: 'Что такое устойчивость по Боде?',
    a: ['Оценка устойчивости по амплитудно-частотной характеристике', 'Оценка устойчивости по времени', 'Оценка устойчивости по фазе', 'Оценка устойчивости по ошибке'],
    correct: 0
  },
  {
    q: 'Что такое система с запаздыванием?',
    a: ['Система, в которой выход реагирует на вход с задержкой', 'Система с обратной связью', 'Система с постоянными коэффициентами', 'Система с переменными коэффициентами'],
    correct: 0
  }
];

// Мидлвар для проверки JWT
function authenticateJWT(req, res, next) {
  const token = req.cookies.token;
  if (!token) return res.redirect('/');
  jwt.verify(token, 'your_jwt_secret_key', (err, decoded) => {
    if (err) return res.redirect('/');
    req.userId = decoded.userId;
    next();
  });
}

app.get('/test', (req, res) => {
  if (!req.session.userId) return res.redirect('/');
  res.sendFile(path.join(__dirname, 'docs', 'test.html'));
});

app.post('/submit', authenticateJWT, (req, res) => {
  let score = 0;
  for (let i = 0; i < questions.length; i++) {
    if (req.body['q' + i] == questions[i].correct) score += questions[i].iq;
  }
  db.get('SELECT email, lastname, firstname, middlename FROM users WHERE id = ?', [req.userId], (err, user) => {
    if (user && user.email) {
      const mailOptions = {
        from: 'sdcvuinm006@gmail.com',
        to: user.email,
        subject: 'Ваш результат IQ-теста',
        text: `Уважаемый(ая) ${user.lastname} ${user.firstname} ${user.middlename}!\n\nВаш результат: ${score} из 160 баллов.\nСпасибо за прохождение теста!`
      };
      transporter.sendMail(mailOptions, (error, info) => {
        if (error) {
          console.error('Ошибка отправки email:', error);
        } else {
          console.log('Email отправлен:', info.response);
        }
      });
    }
    db.run('INSERT INTO results (user_id, score, date) VALUES (?, ?, ?)', [req.userId, score, new Date().toISOString()], () => {
      res.redirect('/result');
    });
  });
});

app.get('/result', (req, res) => {
  if (!req.session.userId) return res.redirect('/');
  res.sendFile(path.join(__dirname, 'docs', 'results.html'));
});

app.get('/logout', (req, res) => {
  res.clearCookie('token');
  res.redirect('/');
});

// Для фронта вопросы (AJAX)
app.get('/api/questions', (req, res) => {
  res.json(questions.map(q => ({ q: q.q, a: q.a })));
});

// Маршрут для страницы со всеми тестами
app.get('/tests', (req, res) => {
  res.sendFile(path.join(__dirname, 'docs', 'tests.html'));
});

// Маршрут для страницы результатов
app.post('/submit-test', (req, res) => {
  // Логика обработки теста
  res.sendFile(path.join(__dirname, 'docs', 'results.html'));
});

// Маршрут для страницы теста по математике
app.get('/test-math', (req, res) => {
  if (!req.session.userId) return res.redirect('/');
  res.sendFile(path.join(__dirname, 'docs', 'test.html'));
});

// API для вопросов по математике
app.get('/api/questions-math', (req, res) => {
  res.json(questionsMath.map(q => ({ q: q.q, a: q.a })));
});

// Обработка отправки результатов по математике
app.post('/submit-math', authenticateJWT, (req, res) => {
  let correctCount = 0;
  for (let i = 0; i < questionsMath.length; i++) {
    if (req.body['q' + i] == questionsMath[i].correct) correctCount++;
  }
  db.get('SELECT email, lastname, firstname, middlename FROM users WHERE id = ?', [req.userId], (err, user) => {
    if (user && user.email) {
      const mailOptions = {
        from: 'sdcvuinm006@gmail.com',
        to: user.email,
        subject: 'Результат теста: Практикум по решению математических задач',
        text: `Уважаемый(ая) ${user.lastname} ${user.firstname} ${user.middlename}!
\nВаш результат: ${correctCount} из 20 правильных ответов.\nСпасибо за прохождение теста!`
      };
      transporter.sendMail(mailOptions, (error, info) => {
        if (error) {
          console.error('Ошибка отправки email:', error);
        } else {
          console.log('Email отправлен:', info.response);
        }
      });
    }
    db.run('INSERT INTO results (user_id, score, date) VALUES (?, ?, ?)', [req.userId, correctCount, new Date().toISOString()], () => {
      res.redirect('/result');
    });
  });
});

// Маршрут для страницы теста по комплексному анализу
app.get('/test-analysis', (req, res) => {
  if (!req.session.userId) return res.redirect('/');
  res.sendFile(path.join(__dirname, 'docs', 'test.html'));
});

// API для вопросов по комплексному анализу
app.get('/api/questions-analysis', (req, res) => {
  res.json(questionsAnalysis.map(q => ({ q: q.q, a: q.a })));
});

// Обработка отправки результатов по комплексному анализу
app.post('/submit-analysis', authenticateJWT, (req, res) => {
  let correctCount = 0;
  for (let i = 0; i < questionsAnalysis.length; i++) {
    if (req.body['q' + i] == questionsAnalysis[i].correct) correctCount++;
  }
  db.get('SELECT email, lastname, firstname, middlename FROM users WHERE id = ?', [req.userId], (err, user) => {
    if (user && user.email) {
      const mailOptions = {
        from: 'sdcvuinm006@gmail.com',
        to: user.email,
        subject: 'Результат теста: Комплексный анализ',
        text: `Уважаемый(ая) ${user.lastname} ${user.firstname} ${user.middlename}!\n\nВаш результат: ${correctCount} из 20 правильных ответов.\nСпасибо за прохождение теста!`
      };
      transporter.sendMail(mailOptions, (error, info) => {
        if (error) {
          console.error('Ошибка отправки email:', error);
        } else {
          console.log('Email отправлен:', info.response);
        }
      });
    }
    db.run('INSERT INTO results (user_id, score, date) VALUES (?, ?, ?)', [req.userId, correctCount, new Date().toISOString()], () => {
      res.redirect('/result');
    });
  });
});

// Маршрут для страницы теста по ИС и БД
app.get('/test-db', (req, res) => {
  if (!req.session.userId) return res.redirect('/');
  res.sendFile(path.join(__dirname, 'docs', 'test.html'));
});

// API для вопросов по ИС и БД
app.get('/api/questions-db', (req, res) => {
  res.json(questionsDB.map(q => ({ q: q.q, a: q.a })));
});

// Обработка отправки результатов по ИС и БД
app.post('/submit-db', authenticateJWT, (req, res) => {
  let correctCount = 0;
  for (let i = 0; i < questionsDB.length; i++) {
    if (req.body['q' + i] == questionsDB[i].correct) correctCount++;
  }
  db.get('SELECT email, lastname, firstname, middlename FROM users WHERE id = ?', [req.userId], (err, user) => {
    if (user && user.email) {
      const mailOptions = {
        from: 'sdcvuinm006@gmail.com',
        to: user.email,
        subject: 'Результат теста: Основы проектирования ИС и БД',
        text: `Уважаемый(ая) ${user.lastname} ${user.firstname} ${user.middlename}!\n\nВаш результат: ${correctCount} из 20 правильных ответов.\nСпасибо за прохождение теста!`
      };
      transporter.sendMail(mailOptions, (error, info) => {
        if (error) {
          console.error('Ошибка отправки email:', error);
        } else {
          console.log('Email отправлен:', info.response);
        }
      });
    }
    db.run('INSERT INTO results (user_id, score, date) VALUES (?, ?, ?)', [req.userId, correctCount, new Date().toISOString()], () => {
      res.redirect('/result');
    });
  });
});

// Маршрут для страницы теста по методам вычислений
app.get('/test-numerical', (req, res) => {
  if (!req.session.userId) return res.redirect('/');
  res.sendFile(path.join(__dirname, 'docs', 'test.html'));
});

// API для вопросов по методам вычислений
app.get('/api/questions-numerical', (req, res) => {
  res.json(questionsNumerical.map(q => ({ q: q.q, a: q.a })));
});

// Обработка отправки результатов по методам вычислений
app.post('/submit-numerical', authenticateJWT, (req, res) => {
  let correctCount = 0;
  for (let i = 0; i < questionsNumerical.length; i++) {
    if (req.body['q' + i] == questionsNumerical[i].correct) correctCount++;
  }
  db.get('SELECT email, lastname, firstname, middlename FROM users WHERE id = ?', [req.userId], (err, user) => {
    if (user && user.email) {
      const mailOptions = {
        from: 'sdcvuinm006@gmail.com',
        to: user.email,
        subject: 'Результат теста: Методы вычислений',
        text: `Уважаемый(ая) ${user.lastname} ${user.firstname} ${user.middlename}!\n\nВаш результат: ${correctCount} из 20 правильных ответов.\nСпасибо за прохождение теста!`
      };
      transporter.sendMail(mailOptions, (error, info) => {
        if (error) {
          console.error('Ошибка отправки email:', error);
        } else {
          console.log('Email отправлен:', info.response);
        }
      });
    }
    db.run('INSERT INTO results (user_id, score, date) VALUES (?, ?, ?)', [req.userId, correctCount, new Date().toISOString()], () => {
      res.redirect('/result');
    });
  });
});

// Маршрут для страницы теста по уравнениям математической физики
app.get('/test-physmath', (req, res) => {
  if (!req.session.userId) return res.redirect('/');
  res.sendFile(path.join(__dirname, 'docs', 'test.html'));
});

// API для вопросов по уравнениям математической физики
app.get('/api/questions-physmath', (req, res) => {
  res.json(questionsPhysMath.map(q => ({ q: q.q, a: q.a })));
});

// Обработка отправки результатов по уравнениям математической физики
app.post('/submit-physmath', authenticateJWT, (req, res) => {
  let correctCount = 0;
  for (let i = 0; i < questionsPhysMath.length; i++) {
    if (req.body['q' + i] == questionsPhysMath[i].correct) correctCount++;
  }
  db.get('SELECT email, lastname, firstname, middlename FROM users WHERE id = ?', [req.userId], (err, user) => {
    if (user && user.email) {
      const mailOptions = {
        from: 'sdcvuinm006@gmail.com',
        to: user.email,
        subject: 'Результат теста: Уравнения математической физики',
        text: `Уважаемый(ая) ${user.lastname} ${user.firstname} ${user.middlename}!\n\nВаш результат: ${correctCount} из 20 правильных ответов.\nСпасибо за прохождение теста!`
      };
      transporter.sendMail(mailOptions, (error, info) => {
        if (error) {
          console.error('Ошибка отправки email:', error);
        } else {
          console.log('Email отправлен:', info.response);
        }
      });
    }
    db.run('INSERT INTO results (user_id, score, date) VALUES (?, ?, ?)', [req.userId, correctCount, new Date().toISOString()], () => {
      res.redirect('/result');
    });
  });
});

// Маршрут для страницы теста по технологии разработки ПО
app.get('/test-softdev', (req, res) => {
  if (!req.session.userId) return res.redirect('/');
  res.sendFile(path.join(__dirname, 'docs', 'test.html'));
});

// API для вопросов по технологии разработки ПО
app.get('/api/questions-softdev', (req, res) => {
  res.json(questionsSoftDev.map(q => ({ q: q.q, a: q.a })));
});

// Обработка отправки результатов по технологии разработки ПО
app.post('/submit-softdev', authenticateJWT, (req, res) => {
  let correctCount = 0;
  for (let i = 0; i < questionsSoftDev.length; i++) {
    if (req.body['q' + i] == questionsSoftDev[i].correct) correctCount++;
  }
  db.get('SELECT email, lastname, firstname, middlename FROM users WHERE id = ?', [req.userId], (err, user) => {
    if (user && user.email) {
      const mailOptions = {
        from: 'sdcvuinm006@gmail.com',
        to: user.email,
        subject: 'Результат теста: Технология разработки ПО',
        text: `Уважаемый(ая) ${user.lastname} ${user.firstname} ${user.middlename}!\n\nВаш результат: ${correctCount} из 20 правильных ответов.\nСпасибо за прохождение теста!`
      };
      transporter.sendMail(mailOptions, (error, info) => {
        if (error) {
          console.error('Ошибка отправки email:', error);
        } else {
          console.log('Email отправлен:', info.response);
        }
      });
    }
    db.run('INSERT INTO results (user_id, score, date) VALUES (?, ?, ?)', [req.userId, correctCount, new Date().toISOString()], () => {
      res.redirect('/result');
    });
  });
});

// Маршрут для страницы теста по математическому моделированию и анализу данных
app.get('/test-modeling', (req, res) => {
  if (!req.session.userId) return res.redirect('/');
  res.sendFile(path.join(__dirname, 'docs', 'test.html'));
});

// API для вопросов по математическому моделированию и анализу данных
app.get('/api/questions-modeling', (req, res) => {
  res.json(questionsModeling.map(q => ({ q: q.q, a: q.a })));
});

// Обработка отправки результатов по математическому моделированию и анализу данных
app.post('/submit-modeling', authenticateJWT, (req, res) => {
  let correctCount = 0;
  for (let i = 0; i < questionsModeling.length; i++) {
    if (req.body['q' + i] == questionsModeling[i].correct) correctCount++;
  }
  db.get('SELECT email, lastname, firstname, middlename FROM users WHERE id = ?', [req.userId], (err, user) => {
    if (user && user.email) {
      const mailOptions = {
        from: 'sdcvuinm006@gmail.com',
        to: user.email,
        subject: 'Результат теста: Математическое моделирование и анализ данных',
        text: `Уважаемый(ая) ${user.lastname} ${user.firstname} ${user.middlename}!\n\nВаш результат: ${correctCount} из 20 правильных ответов.\nСпасибо за прохождение теста!`
      };
      transporter.sendMail(mailOptions, (error, info) => {
        if (error) {
          console.error('Ошибка отправки email:', error);
        } else {
          console.log('Email отправлен:', info.response);
        }
      });
    }
    db.run('INSERT INTO results (user_id, score, date) VALUES (?, ?, ?)', [req.userId, correctCount, new Date().toISOString()], () => {
      res.redirect('/result');
    });
  });
});

// Маршрут для страницы теста по информационному менеджменту
app.get('/test-infoman', (req, res) => {
  if (!req.session.userId) return res.redirect('/');
  res.sendFile(path.join(__dirname, 'docs', 'test.html'));
});

// API для вопросов по информационному менеджменту
app.get('/api/questions-infoman', (req, res) => {
  res.json(questionsInfoMan.map(q => ({ q: q.q, a: q.a })));
});

// Обработка отправки результатов по информационному менеджменту
app.post('/submit-infoman', authenticateJWT, (req, res) => {
  let correctCount = 0;
  for (let i = 0; i < questionsInfoMan.length; i++) {
    if (req.body['q' + i] == questionsInfoMan[i].correct) correctCount++;
  }
  db.get('SELECT email, lastname, firstname, middlename FROM users WHERE id = ?', [req.userId], (err, user) => {
    if (user && user.email) {
      const mailOptions = {
        from: 'sdcvuinm006@gmail.com',
        to: user.email,
        subject: 'Результат теста: Информационный менеджмент',
        text: `Уважаемый(ая) ${user.lastname} ${user.firstname} ${user.middlename}!\n\nВаш результат: ${correctCount} из 20 правильных ответов.\nСпасибо за прохождение теста!`
      };
      transporter.sendMail(mailOptions, (error, info) => {
        if (error) {
          console.error('Ошибка отправки email:', error);
        } else {
          console.log('Email отправлен:', info.response);
        }
      });
    }
    db.run('INSERT INTO results (user_id, score, date) VALUES (?, ?, ?)', [req.userId, correctCount, new Date().toISOString()], () => {
      res.redirect('/result');
    });
  });
});

// Маршрут для страницы теста по мировым информационным ресурсам
app.get('/test-worldinfo', (req, res) => {
  if (!req.session.userId) return res.redirect('/');
  res.sendFile(path.join(__dirname, 'docs', 'test.html'));
});

// API для вопросов по мировым информационным ресурсам
app.get('/api/questions-worldinfo', (req, res) => {
  res.json(questionsWorldInfo.map(q => ({ q: q.q, a: q.a })));
});

// Обработка отправки результатов по мировым информационным ресурсам
app.post('/submit-worldinfo', authenticateJWT, (req, res) => {
  let correctCount = 0;
  for (let i = 0; i < questionsWorldInfo.length; i++) {
    if (req.body['q' + i] == questionsWorldInfo[i].correct) correctCount++;
  }
  db.get('SELECT email, lastname, firstname, middlename FROM users WHERE id = ?', [req.userId], (err, user) => {
    if (user && user.email) {
      const mailOptions = {
        from: 'sdcvuinm006@gmail.com',
        to: user.email,
        subject: 'Результат теста: Мировые информационные ресурсы',
        text: `Уважаемый(ая) ${user.lastname} ${user.firstname} ${user.middlename}!\n\nВаш результат: ${correctCount} из 20 правильных ответов.\nСпасибо за прохождение теста!`
      };
      transporter.sendMail(mailOptions, (error, info) => {
        if (error) {
          console.error('Ошибка отправки email:', error);
        } else {
          console.log('Email отправлен:', info.response);
        }
      });
    }
    db.run('INSERT INTO results (user_id, score, date) VALUES (?, ?, ?)', [req.userId, correctCount, new Date().toISOString()], () => {
      res.redirect('/result');
    });
  });
});

// Маршрут для страницы теста по теории управления
app.get('/test-control', (req, res) => {
  if (!req.session.userId) return res.redirect('/');
  res.sendFile(path.join(__dirname, 'docs', 'test.html'));
});

// API для вопросов по теории управления
app.get('/api/questions-control', (req, res) => {
  res.json(questionsControl.map(q => ({ q: q.q, a: q.a })));
});

// Обработка отправки результатов по теории управления
app.post('/submit-control', authenticateJWT, (req, res) => {
  let correctCount = 0;
  for (let i = 0; i < questionsControl.length; i++) {
    if (req.body['q' + i] == questionsControl[i].correct) correctCount++;
  }
  db.get('SELECT email, lastname, firstname, middlename FROM users WHERE id = ?', [req.userId], (err, user) => {
    if (user && user.email) {
      const mailOptions = {
        from: 'sdcvuinm006@gmail.com',
        to: user.email,
        subject: 'Результат теста: Теория управления',
        text: `Уважаемый(ая) ${user.lastname} ${user.firstname} ${user.middlename}!\n\nВаш результат: ${correctCount} из 20 правильных ответов.\nСпасибо за прохождение теста!`
      };
      transporter.sendMail(mailOptions, (error, info) => {
        if (error) {
          console.error('Ошибка отправки email:', error);
        } else {
          console.log('Email отправлен:', info.response);
        }
      });
    }
    db.run('INSERT INTO results (user_id, score, date) VALUES (?, ?, ?)', [req.userId, correctCount, new Date().toISOString()], () => {
      res.redirect('/result');
    });
  });
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log('Сервер запущен на порту', PORT);
}); 